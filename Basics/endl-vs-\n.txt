std::endl vs \n

Using std::endl is often inefficient, as it actually does two jobs: it outputs a newline (moving the cursor to the next line of the console), 
and it flushes the buffer (which is slow). If we output multiple lines of text ending with std::endl, we will get multiple flushes, 
which is slow and probably unnecessary.

When outputting text to the console, we typically don’t need to explicitly flush the buffer ourselves. 
C++’s output system is designed to self-flush periodically, and it’s both simpler and more efficient to let it flush itself.

To output a newline without flushing the output buffer, we use \n (inside either single or double quotes), 
which is a special symbol that the compiler interprets as a newline character.
 \n moves the cursor to the next line of the console without causing a flush, so it will typically perform better. 
 \n is also more concise to type and can be embedded into existing double-quoted text.